
//! Autogenerated weights for `pallet_sim_renault`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-07-25, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-collator
// benchmark
// pallet
// --chain
// dev
// --pallet=pallet_sim_renault
// --extrinsic=*
// --wasm-execution=compiled
// --execution=wasm
// --repeat=20
// --steps=50
// --output=./pallets/sim_renault/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_dora_rewards.
pub trait WeightInfo {
    fn create_factory() -> Weight;
    fn create_vehicle() -> Weight;
    fn init_vehicle() -> Weight;
}

/// Weight functions for `pallet_sim_renault`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: SimRenaultPallet Factories (r:1 w:1)
	fn create_factory() -> Weight {
		(17_355_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: SimRenaultPallet Factories (r:1 w:0)
	// Storage: SimRenaultPallet Vehicles (r:1 w:1)
	fn create_vehicle() -> Weight {
		(22_019_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: SimRenaultPallet Vehicles (r:1 w:0)
	// Storage: SimRenaultPallet VehiclesStatus (r:0 w:1)
	fn init_vehicle() -> Weight {
		(18_752_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
